spring:
  application:
    name: kukbuk-srv

# Google Cloud configuration
google:
  cloud:
    project-id: ${GOOGLE_CLOUD_PROJECT_ID:cookbook-extractor}
    credentials:
      path: ${GOOGLE_CLOUD_CREDENTIALS_PATH:}

# Firestore configuration
firestore:
  enabled: ${FIRESTORE_ENABLED:true}

# Recipe cache configuration
recipe:
  store:
    enabled: ${RECIPE_CACHE_ENABLED:true}
    timeout:
      lookup-ms: ${RECIPE_STORE_LOOKUP_TIMEOUT_MS:200}
      save-ms: ${RECIPE_STORE_SAVE_TIMEOUT_MS:5000}
      count-ms: ${RECIPE_STORE_COUNT_TIMEOUT_MS:1000}

logging:
  level:
    net.shamansoft: DEBUG
    net.shamansoft.cookbook: DEBUG
    com.google.cloud: INFO
    org.springframework.web.reactive.function.client.WebClient: DEBUG
cookbook:
  gemini:
    api-key: "SHOULD BE GENERATED AND STORED IN A SECURE PLACE, AT LEAST AS AN ENVIRONMENT VARIABLE"
    base-url: "https://generativelanguage.googleapis.com/v1beta"
    model: "gemini-2.0-flash"
    prompt: "Convert the above recipe to YAML format, using the above YAML example as a guide. Provide only the valid YAML output. Markdown formatting is allowed within YAML string values, but do not include any markdown code blocks or any other text outside of the yaml structure. Requirements: schema_version: \"1.0.0\". Generate unique recipe_version. Use current date for date_created if not specified. Format times as \"1d 2h 30m\". Use Markdown for text formatting. Use full path for medias"
    temperature: 0.1
    top-p: 0.8
  drive:
    folder-name: "kukbuk"
    # Application name to use when constructing the Drive client
    application-name: "${spring.application.name}"
    upload-url: "https://www.googleapis.com/upload/drive/v3"
    base-url: "https://www.googleapis.com/drive/v3"
    auth-url: "https://oauth2.googleapis.com"
  google:
    oauth-id: "REPLACE WITH YOUR CLIENT ID"
management:
  endpoints:
    web:
      exposure:
        include: health,httpexchanges,env,info,firestore,store-metrics
